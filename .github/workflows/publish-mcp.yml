name: Publish MCP Server to Registry

on:
  # Triggers the workflow on a new release creation.
  release:
    types: [published]
  # Allows manual runs via the GitHub Actions UI.
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      # Required for OIDC authentication by mcp-publisher
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Release Tag Version
        id: get_version
        run: |
          # The MCP registry expects the version in server.json to match the release tag.
          # We use the tag name (e.g., v1.2.3) and strip the 'v' prefix (e.g., 1.2.3)
          if [[ "${{ github.event_name }}" == "release" ]]; then
            VERSION_TAG="${{ github.event.release.tag_name }}"
            VERSION="${VERSION_TAG#v}"
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            # For manual runs, use a placeholder or prompt the user if needed.
            echo "::error::Manual dispatch not yet configured to set version."
            exit 1
          fi
          
          # Update server.json version to match the release tag
          # NOTE: Requires jq tool for JSON manipulation.
          sudo apt-get install -y jq
          jq --arg ver "$VERSION" '.version = $ver' server.json | tee server.json
          jq --arg ver "$VERSION" '.packages[0].version = $ver' server.json | tee server.json
          
          echo "Updated server.json version to $VERSION"

      - name: Install MCP Publisher CLI
        run: |
          # Install using Homebrew for simplicity
          brew install mcp-publisher

      - name: Validate server.json against MCP schema
        run: |
          # Use mcp-publisher's built-in validation (includes schema check)
          echo "Running mcp-publisher validate (includes schema check)..."
          mcp-publisher validate
          echo "MCP schema validation successful."

      - name: Publish server to Registry
        run: |
          # Login using GitHub OIDC (no secrets required)
          echo "Authenticating with MCP Registry..."
          mcp-publisher login github-oidc
          
          # Publish the server
          echo "Publishing server..."
          mcp-publisher publish
          echo "Successfully published io.github.jfrog/jfrog-mcp-server v$VERSION"

      - name: Verify publication
        run: |
          echo "Waiting for registry to update..."
          sleep 30
          echo "Verifying publication in MCP registry..."
          if curl -s "https://registry.modelcontextprotocol.io/v0/servers?search=io.github.jfrog/jfrog-mcp-server" | grep -q "jfrog-mcp-server"; then
            echo "✅ Server successfully published and visible in registry"
          else
            echo "⚠️  Server may not be visible in registry yet (could take some time)"
          fi